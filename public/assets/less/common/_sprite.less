/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@line-name: 'line';
@line-x: 0px;
@line-y: 0px;
@line-offset-x: 0px;
@line-offset-y: 0px;
@line-width: 300px;
@line-height: 19px;
@line-total-width: 300px;
@line-total-height: 83px;
@line-image: '../images/sprite.png';
@line: 0px 0px 0px 0px 300px 19px 300px 83px '../images/sprite.png' 'line';
@mobile3-name: 'mobile3';
@mobile3-x: 170px;
@mobile3-y: 21px;
@mobile3-offset-x: -170px;
@mobile3-offset-y: -21px;
@mobile3-width: 14px;
@mobile3-height: 26px;
@mobile3-total-width: 300px;
@mobile3-total-height: 83px;
@mobile3-image: '../images/sprite.png';
@mobile3: 170px 21px -170px -21px 14px 26px 300px 83px '../images/sprite.png' 'mobile3';
@play-name: 'play';
@play-x: 0px;
@play-y: 21px;
@play-offset-x: 0px;
@play-offset-y: -21px;
@play-width: 62px;
@play-height: 62px;
@play-total-width: 300px;
@play-total-height: 83px;
@play-image: '../images/sprite.png';
@play: 0px 21px 0px -21px 62px 62px 300px 83px '../images/sprite.png' 'play';
@subscribe-name: 'subscribe';
@subscribe-x: 128px;
@subscribe-y: 21px;
@subscribe-offset-x: -128px;
@subscribe-offset-y: -21px;
@subscribe-width: 40px;
@subscribe-height: 50px;
@subscribe-total-width: 300px;
@subscribe-total-height: 83px;
@subscribe-image: '../images/sprite.png';
@subscribe: 128px 21px -128px -21px 40px 50px 300px 83px '../images/sprite.png' 'subscribe';
@zoom-name: 'zoom';
@zoom-x: 64px;
@zoom-y: 21px;
@zoom-offset-x: -64px;
@zoom-offset-y: -21px;
@zoom-width: 62px;
@zoom-height: 62px;
@zoom-total-width: 300px;
@zoom-total-height: 83px;
@zoom-image: '../images/sprite.png';
@zoom: 64px 21px -64px -21px 62px 62px 300px 83px '../images/sprite.png' 'zoom';
@spritesheet-width: 300px;
@spritesheet-height: 83px;
@spritesheet-image: '../images/sprite.png';
@spritesheet-sprites: @line @mobile3 @play @subscribe @zoom;
@spritesheet: 300px 83px '../images/sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
